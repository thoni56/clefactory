# -*- org-todo-keyword-faces: (("DOING" . "orange") ("REQUIRES" . "dark orange")) -*-
#+TODO: TODO(t) TRY(y) REQUIRES(r) DOING(i) | DONE(d)

(This file is structured for Emacs org-mode...)

Some useful commands:

  <C-S-return>	org-insert-todo-heading-respect-content
  <C-c C-t>     select state
  <S-Right>     next state
  <S-Left>      previous state
  <M-Left>      promote heading
  <M-S-Left>    promote subtree
  <M-Right>     demote heading
  <M-S-Right>   demote subtree


* TODO Get a list of files from compile_commands.json
* TODO If no compile_commands.json use all *.c files in current directory
* TODO Take one argument which is the directory to 'cd' to before operating
* TODO Option to prune a directory (tree)
Any file in it will not be considered even if it they are included,
handy for `/usr` where files "never" change so it is unnecessary to
check their time stamps
* TODO Store and restore the index on disc
Using `clang_saveIndex()` and `clang_createIndexFromFile()` are
available. Need to think about if a build system can be responsible
for keeping the index updated and `clefactory` should only do the
actual operations. Then we only needs to check if the files are newer
than the index file...
